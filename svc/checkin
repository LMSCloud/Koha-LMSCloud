#!/usr/bin/perl

# Copyright 2014 ByWater Solutions
# Copyright 2016 Aleisha Amohia <aleisha@catalyst.net.nz>
#
# This file is part of Koha.
#
# Koha is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Koha is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Koha; if not, see <http://www.gnu.org/licenses>.

use Modern::Perl;

use CGI;
use JSON qw(to_json);

use C4::Circulation qw( AddReturn );
use C4::Context;
use C4::Auth qw(check_cookie_auth);
use Koha::Checkouts;
use Koha::Items;

my $input = CGI->new;

my ( $auth_status ) =
  check_cookie_auth( $input->cookie('CGISESSID'),
    { circulate => 'circulate_remaining_permissions' } );

if ( $auth_status ne "ok" ) {
    exit 0;
}

binmode STDOUT, ":encoding(UTF-8)";
print $input->header( -type => 'text/plain', -charset => 'UTF-8' );

my $itemnumber     = $input->param('itemnumber');
my $borrowernumber = $input->param('borrowernumber');
my $override_limit = $input->param('override_limit');
my $exempt_fine    = $input->param('exempt_fine');
my $branchcode     = $input->param('branchcode')
  || C4::Context->userenv->{'branch'};

# Expect these inputs to come in as JSON boolean values
$override_limit = $override_limit ? $override_limit eq 'true' : undef;
$exempt_fine    = $exempt_fine    ? $exempt_fine eq 'true'    : undef;

my $item = Koha::Items->find($itemnumber);

my $barcode = $item ? $item->barcode : undef; # We certainly will want to return an error code

my $data;
$data->{itemnumber}     = $itemnumber;
$data->{borrowernumber} = $borrowernumber;
$data->{branchcode}     = $branchcode;

my $checkout = Koha::Checkouts->find({ itemnumber => $itemnumber });
$data->{patronnote} = $checkout ? $checkout->note : q||;

( $data->{returned} ) = AddReturn( $barcode, $branchcode, $exempt_fine );

print to_json($data);
