[% USE raw %]
[% USE Asset %]
[% USE Koha %]
[% USE KohaDates %]
[% USE Branches %]
[% USE ItemTypes %]
[% USE Price %]
[% USE AuthorisedValues %]
[% USE AdditionalContents %]
[% SET OpacNav = AdditionalContents.get( location => "OpacNav", lang => lang, library => logged_in_user.branchcode || default_branch, blocktitle => 0 ) %]
[% SET OpacNavBottom = AdditionalContents.get( location => "OpacNavBottom", lang => lang, library => logged_in_user.branchcode || default_branch, blocktitle => 0 ) %]
[% SET OpacMySummaryNote = AdditionalContents.get( location => "OpacMySummaryNote", lang => lang, library => branchcode ) %]

[% SET borrower_club_enrollments = logged_in_user.get_club_enrollments %]
[% SET borrower_enrollable_clubs = logged_in_user.get_enrollable_clubs(1) %] <!-- 1 => OPAC -->

[% INCLUDE 'doc-head-open.inc' %]
<title>Your library home &rsaquo; [% IF ( LibraryNameTitle ) %][% LibraryNameTitle | html %][% ELSE %]Koha online[% END %] catalog</title>
[% INCLUDE 'doc-head-close.inc' %]
[% Asset.css("css/overdrive.css") | $raw %]
[% BLOCK cssinclude %][% END %]
</head>
[% INCLUDE 'bodytag.inc' bodyid='opac-user' bodyclass='scrollto' %]
[% INCLUDE 'masthead.inc' %]

<div class="main">
    <nav id="breadcrumbs" aria-label="Breadcrumb" class="breadcrumbs">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/cgi-bin/koha/opac-main.pl">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a href="/cgi-bin/koha/opac-user.pl">[% INCLUDE 'patron-title.inc' patron = logged_in_user %]</a>
            </li>
            <li class="breadcrumb-item active">
                <a href="#" aria-current="page">Your Bookings</a>
            </li>
        </ol>
    </nav> <!-- /#breadcrumbs -->

    <div class="container-fluid">
        <div class="row">
            <div class="col col-lg-2 order-2 order-lg-1">
                <div id="navigation">
                    [% INCLUDE 'navigation.inc' IsPatronPage=1 %]
                </div>
            </div>
            <div class="col-md-12 col-lg-10 order-1 order-lg-2">
                <div id="userbookings" class="maincontent">
                    <h1>Bookings</h1>

                    [% IF op == 'list' %]
                        <div class="toptabs">
                            <ul class="nav nav-tabs" id="list-tabs">
                                <li id="user-bookings-tab" class="nav-item">
                                    <a class="nav-link active" id="your-bookings" href="/cgi-bin/koha/opac-bookings.pl?op=list">Your bookings</a>
                                </li>
                            </ul>
                        </div> <!-- /.toptabs -->
                        <div class="tab-content">
                            [% PROCESS 'bookings-table.inc' %]
                            [% INCLUDE 'modals/booking/cancel.inc' %]
                        </div>
                    [% END %]
                </div> <!-- /#userdetails -->
            </div> <!-- /.col-10 -->
        </div> <!-- /.row -->
    </div> <!-- /.container-fluid -->
</div> <!-- /#main -->

[% INCLUDE 'opac-bottom.inc' %]
[% BLOCK jsinclude %]
    [% Asset.js("js/form-submit.js") | $raw %]
    [% Asset.js("lib/vis-timeline/vis-timeline-graph2d.min.js") | $raw %]
    [% Asset.js("js/combobox.js") | $raw %]
    [% Asset.js("js/modals/booking/cancel.js") | $raw %]
    [% INCLUDE 'calendar.inc' %]
    [% INCLUDE 'datatables.inc' %]

    <script>
        $(document).ready(() => {
            const dataTable = $("#opac-user-bookings-table");
            const thIndex = $(dataTable).find("th.psort").index();

            /* Custom search function for status column using data attribute */
            $.fn.dataTable.ext.search.push(
                function(settings, searchData, index, rowData, counter) {
                    if (settings.nTable.id !== 'opac-user-bookings-table') {
                        return true;
                    }

                    const filterValue = $('#status_filter').val() || 'active';
                    if (filterValue === 'all') {
                        return true; /* Show all */
                    }

                    const row = settings.aoData[index].nTr;
                    const statusCell = $(row).find('td.status');
                    const dataStatus = statusCell.attr('data-status');

                    if (filterValue === 'active') {
                        return dataStatus === 'new';
                    }
                    return dataStatus === filterValue;
                }
            );

            const table = $(dataTable)
                .dataTable($.extend(true, {}, dataTablesDefaults, {
                    "sorting": [
                        [thIndex, 'asc']
                    ],
                    "dom": '<"top"<"table_entries"><"table_controls"fB<"status_filter_container">>>t<"bottom"ip>',
                    "paging": true,
                    "pageLength": 20,
                    "columnDefs": [{
                            "targets": ["nosort"],
                            "sortable": false,
                            "searchable": false
                        },
                        {
                            "type": "anti-the",
                            "targets": ["anti-the"]
                        },
                        {
                            "visible": false,
                            "targets": ["hidden"]
                        },
                        {
                            "className": 'dtr-control',
                            "orderable": false,
                            "targets": -1
                        }
                    ],
                    "language": {
                        "search": "_INPUT_",
                        "searchPlaceholder": _("Search")
                    },
                    "autoWidth": false,
                    "responsive": {
                        details: {
                            type: 'column',
                            target: -1
                        }
                    },
                    buttons: [
                        /* Override default button set so that we can extend the options of print and csv */
                        'clearFilter', 'copy',
                        {
                            extend: "print",
                            exportOptions: {
                                /* Print view should show all columns (even invisible ones) unless they are .noExport */
                                columns: ":not(.noExport)"
                            }
                        },
                        {
                            extend: "csv",
                            exportOptions: {
                                /* CSV export should include all columns (even invisible ones) unless they are .noExport */
                                columns: ":not(.noExport)"
                            }
                        }
                    ],
                    "initComplete": function(settings, json) {
                        const api = this.api();

                        /* Add status filter dropdown to controls area */
                        const statusSelect = $('<select id="status_filter" class="form-control" style="width: auto; display: inline-block; margin-left: 10px;">' +
                            '<option value="active" selected>' + _("Active and pending") + '</option>' +
                            '<option value="all">' + _("All bookings") + '</option>' +
                            '<option value="cancelled">' + _("Cancelled") + '</option>' +
                            '<option value="completed">' + _("Completed") + '</option>' +
                            '</select>');

                        $('.status_filter_container').append(statusSelect);

                        /* Apply filter on change */
                        statusSelect.on('change', function() {
                            api.draw();
                        });

                        /* Apply default filter */
                        api.draw();
                    },
                    "drawCallback": function() {
                        /* Apply Bootstrap pagination classes */
                        $(this).closest('.dataTables_wrapper').find('.dataTables_paginate').addClass('pagination');
                        $('.paginate_button').each(function() {
                            $(this).addClass('page-link');
                            if (!$(this).parent().hasClass('page-item')) {
                                $(this).wrap('<li class="page-item"></li>');
                            }
                            if ($(this).hasClass('current')) {
                                $(this).parent().addClass('active');
                            }
                            if ($(this).hasClass('disabled')) {
                                $(this).parent().addClass('disabled');
                            }
                        });
                    }
                }));

            // Initialize combobox for cancellation reason
            $("#cancellation-reason").comboBox({
                displayProperty: 'name',
                placeholder: _("Select or type a reason"),
            });
        });
    </script>

[% END %]
