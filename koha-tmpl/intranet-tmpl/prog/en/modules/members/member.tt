[% USE raw %]
[% USE Asset %]
[% USE Koha %]
[% USE TablesSettings %]
[% USE Branches %]
[% USE Letters %]
[% USE Categories %]
[% SET footerjs = 1 %]
[% PROCESS 'patronfields.inc' %]
[% SET libraries = Branches.all %]
[% SET categories = Categories.all.unblessed %]
[% SET columns = ['cardnumber', 'name-address', 'dateofbirth', 'branch', 'category', 'restriction', 'dateexpiry', 'checkouts', 'account_balance', 'borrowernotes', 'action'] %]
[% SET searchtype = searchtype || Koha.Preference('DefaultPatronSearchMethod') %]
[% PROCESS 'patron-search.inc' %]
[% INCLUDE 'doc-head-open.inc' %]
<title>Patrons[% IF ( searching ) %] &rsaquo; Search results[% END %] &rsaquo; Koha</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>

<body id="pat_member" class="pat">
[% WRAPPER 'header.inc' %]
    [% INCLUDE 'patron-search-header.inc' %]
[% END %]

[% WRAPPER 'sub-header.inc' %]
    [% WRAPPER breadcrumbs %]
        [% WRAPPER breadcrumb_item bc_active= 1 %]
            <span>Patrons</span>
        [% END %]
    [% END #/ WRAPPER breadcrumbs %]
[% END #/ WRAPPER sub-header.inc %]

<div class="main container-fluid">
    <div class="row">
        <div class="col-sm-10 col-sm-push-2">
            <main>

          [% IF CAN_user_tools_manage_patron_lists %]
            <div id="patron_list_dialog" class="dialog message">
              Added <span class="patrons-length"></span> patrons to <a></a>.
            </div>
          [% END %]
          [% IF (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
            <div id="notice_sent_dialog" class="dialog alert">
              Letter "<span class="letter-name"></span>" successfully created as notice to <span class="patrons-length"></span> patron(s).
              <span class="letter-email"><br /><span class="letter-email-count"></span> patron(s) notified by email.</span>
              <span class="letter-print"><br />Print notices created for <span class="letter-print-count"></span> patron(s). <a href="/cgi-bin/koha/tools/download-files.pl" target="_blank">Click here to download the notices for printing.</a></span>
            </div>
          [% END %]

          [% INCLUDE 'patron-toolbar.inc' %]
          [% INCLUDE 'noadd-warnings.inc' %]

          [% IF CAN_user_borrowers_edit_borrowers && pending_borrower_modifications %]
            <div class="pending-info" id="patron_updates_pending">
              <a href="/cgi-bin/koha/members/members-update.pl">Patrons requesting modifications</a>:
              <span class="number_box"><a href="/cgi-bin/koha/members/members-update.pl">[% pending_borrower_modifications | html %]</a></span>
            </div>
          [% END %]

          <div id="searchresults">
            [% IF CAN_user_tools_manage_patron_lists || CAN_user_borrowers_edit_borrowers || (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
              <div class="searchheader fh-fixedHeader" id="searchheader" style="display:none;">
                  <div>
                      <a href="#" class="btn btn-link" id="select_all"><i class="fa fa-check"></i> Select all</a>
                      |
                      <a href="#" class="btn btn-link" id="clear_all"><i class="fa fa-remove"></i> Clear all</a>
                    [% IF CAN_user_tools_manage_patron_lists %]

                    [% END %]
                    [% IF (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
                         <button id="send_notice_letter_select" class="btn btn-sm btn-default disabled" disabled="disabled" type="submit"><i class="fa fa-compress" aria-hidden="true"></i> Send notice</button>
                    [% END %]

                    [% IF CAN_user_tools_manage_patron_lists %]
                        <div id="patronlist-dropdown" class="btn-group">
                            <button id="patronlist-menu" type="button" class="btn btn-sm btn-default dropdown-toggle patron-edits disabled" disabled="disabled" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Add to patron list <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                [% IF patron_lists %]
                                    [% FOREACH pl IN patron_lists %]
                                        <li><a href="#" class="patron-list-add" data-listid="[% pl.patron_list_id | html %]">[% pl.name | html %]</a></li>
                                    [% END %]
                                [% END %]
                                <li role="separator" class="divider"></li>
                                <li><a href="#" class="patron-list-add" data-listid="new">New list</a></li>
                            </ul>
                        </div>
                    [% END %]

                    [% IF CAN_user_borrowers_edit_borrowers %]
                          <button id="merge-patrons" class="btn btn-sm btn-default disabled" disabled="disabled" type="submit"><i class="fa fa-compress" aria-hidden="true"></i> Merge selected patrons</button>
                    [% END %]
                    <div id="patron_search_selected" class="btn-group" style="display:none;">
                        <span></span>
                        <a href="#" id="clear-patron-selection"><i class="fa fa-remove"></i> Clear</a>
                    </div>
                  </div>
                </div>
            [% END %]

            [% IF CAN_user_borrowers_edit_borrowers || CAN_user_tools_manage_patron_lists %]
                [% columns.unshift('checkbox') | html %]
            [% END %]
            [% PROCESS patron_search_table table_id => 'memberresultst' columns => columns %]
          </div>

            </main>
        </div> <!-- /.col-sm-10.col-sm-push-2 -->

        <div class="col-sm-2 col-sm-pull-10">
            <aside>
                [% PROCESS patron_search_filters categories => categories, libraries => libraries, filters => ['search_field', 'search_type', 'category', 'branch', 'age_range', 'issue_count_range', 'charges_range', 'open_charges_since', 'expires_period', 'debarred_period', 'inactive_period', 'last_letter', 'overdue_level', 'valid_email', 'patron_list'], search_filter => searchmember %]
            </aside>
        </div> <!-- /.col-sm-2.col-sm-pull-10 -->
    </div> <!-- /.row -->

	<!-- Modal to send adhoc notices -->
	<div class="modal fade" id="selectAdhocNoticeLetter" tabindex="-1" role="dialog" aria-labelledby="selectAdhocNoticeLetter_label" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<form id="noticeform">
				<div class="modal-header">
					<button type="button" class="closebtn" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h3 id="selectAdhocNoticeLetter_label">Send Notice</h3>
				</div>
				<div class="modal-body">
				
					<p>
						Please select the letter that will be used to create notices to the selected patrons. Please be aware that patrons might be charged for notices depending on the defined notice fee rules.
					</p>
					<p>
						Number of selected patrons: <span id="selectAdhocNoticeLetterPatronCount"></span>
					</p>
					<p id="adhocNoticeLetterSelection">
						<label for="adhocNoticeLetterSelection_letter">Select letter: </label>
						<select name="adhocNoticeLetterSelection_letter" id="adhocNoticeLetterSelection_letter">
						</select>
					</p>
					<p>
						<label>
							Prefer Email notification if an email address is available: <input type="checkbox" id="preferEmail" name="preferEmail" value="yes" checked>
						</label>
					</p>
					<p>
						<label>
							Do not charge patrons despite of possible configured notice fee rules: <input type="checkbox" id="dontCharge" name="dontCharge" value="yes">
						</label>
					</p>
					<p style="display:[% IF ( Koha.Preference('NoticeBcc') ) %]unset[% ELSE %]none[% END %]">
						<label>
							Send copies of the message(s) to the configured email address of the library: <input type="checkbox" id="noBccEmail" name="noBccEmail" value="yes">
						</label>
					</p>
				</div>
				<div class="modal-footer">
					<input id="send_notice_submit" type="submit" class="submit" value="Create notices">
				</div>
				</form>
			</div>
		</div>
	</div>


    <!-- New Patron List Modal -->
    <div class="modal" id="new-patron-list" tabindex="-1" role="dialog" aria-labelledby="new-patron-listLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="closebtn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="new-patron-listLabel">Add patrons to a new patron list</h4>
                </div>
                <form id="new-patron-list_form">
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="new_patron_list" class="required">Patron list name: </label>
                            <input class="form-control required" type="text" name="new_patron_list" id="new_patron_list" required="required" />
                            <input type="hidden" name="add_to_patron_list" id="add_to_patron_list" />
                            <span class="required">Required</span>
                        </div>
                    </div> <!-- /.modal-body -->
                    <div class="modal-footer">
                        <button type="submit" id="add_to_patron_list_submit" class="btn btn-default approve">Submit</button>
                        <button type="button" class="btn btn-default deny" data-dismiss="modal">Cancel</button>
                    </div> <!-- /.modal-footer -->
                </form> <!-- /#new-patron-list_form -->
            </div> <!-- /.modal-content -->
        </div> <!-- /.modal-dialog -->
    </div> <!-- /#new-patron-list -->

[% MACRO jsinclude BLOCK %]
    [% INCLUDE 'calendar.inc' %]
    [% INCLUDE 'datatables.inc' %]
    [% INCLUDE 'columns_settings.inc' %]
    [% INCLUDE 'str/members-menu.inc' %]
    [% Asset.js("js/members-menu.js") | $raw %]
    [% INCLUDE 'select2.inc' %]
    <script>
        function showPatronSelections( number ){
            $("#patron_search_selected").show().find("span").text( _("Patrons selected: ") + number );
        }

        $(document).ready(function() {
            $('#merge-patrons').prop('disabled', true);
            $('#send_notice_letter_select').prop('disabled', true);
            $('#memberresultst').on('change', 'input.selection', function() {
                var patron_search_selections = JSON.parse( localStorage.getItem("patron_search_selections") ) || [];
                var borrowernumber = $(this).val();
                if( $(this).prop("checked") ){
                    patron_search_selections.push( $(this).val() );
                    localStorage.setItem('patron_search_selections', JSON.stringify( patron_search_selections ));
                    showPatronSelections( patron_search_selections.length );
                } else {
                    var filtered = patron_search_selections.filter(function( value ){
                        return value !== borrowernumber;
                    });
                    if( filtered.length > 0 ){
                        localStorage.setItem('patron_search_selections', JSON.stringify( filtered ));
                        patron_search_selections = filtered;
                        showPatronSelections( filtered.length );
                    } else {
                        patron_search_selections = [];
                        localStorage.removeItem('patron_search_selections');
                        $("#patron_search_selected").hide();
                    }
                }
                if ( patron_search_selections.length > 1 ) {
                    /* More than one checkbox has been checked */
                    $('#merge-patrons').prop('disabled', false).removeClass("disabled");
                    $("#patronlist-menu").removeClass("disabled").prop("disabled", false);
                    $('#send_notice_letter_select').removeClass("disabled").prop("disabled", false);
                } else if ( patron_search_selections.length == 1 ) {
                    /* At least one checkbox has been checked */
                    $('#merge-patrons').prop('disabled', true).addClass("disabled");
                    $("#patronlist-menu").removeClass("disabled").prop("disabled", false);
                    $('#send_notice_letter_select').removeClass("disabled").prop("disabled", false);
                } else {
                    /* No checkbox has been checked */
                    $('#merge-patrons').prop('disabled', true).addClass("disabled");
                    $("#patronlist-menu").addClass("disabled").prop("disabled", true);
                    $('#send_notice_letter_select').addClass("disabled").prop("disabled", true);
                }
            });

            $('#merge-patrons').on('click', function() {
                var patron_search_selections = JSON.parse( localStorage.getItem("patron_search_selections") ) || [];
                var merge_patrons_url = 'merge-patrons.pl?id=' + patron_search_selections.join("&id=");
                window.location.href = merge_patrons_url;
            });

            $("#clear-patron-selection").on("click", function(e){
                e.preventDefault();
                $(".selection").prop("checked", false).change();
                localStorage.removeItem("patron_search_selections");
                $("#patron_search_selected").hide();
                $('#merge-patrons').prop('disabled', true).addClass("disabled");
                $("#patronlist-menu").addClass("disabled").prop("disabled", true);
                $('#send_notice_letter_select').addClass("disabled").prop("disabled", true);
            });

            $("#patronlist-dropdown").on("click", ".patron-list-add", function(e){
                e.preventDefault();
                var patron_search_selections = JSON.parse( localStorage.getItem("patron_search_selections") ) || [];
                if ( patron_search_selections.length == 0 ) {
                    alert( _("You have not selected any patrons to add to a list!") );
                    $(".btn-group").removeClass("open"); /* Close button menu */
                    return false;
                }

                var listid = $(this).data("listid");
                $("#add_to_patron_list").val( listid );
                if( listid == "new" ){
                    /* #add_to_patron_list value "new" in the modal form will tell API to create a new list */
                    $("#new-patron-list").modal("show");
                } else {
                    /* Ajax submit the patrons to list */

                    patronListAdd();
                }
            })

            /* Submit selected patrons to a list via AJAX */
            $("#new-patron-list_form").on('submit', function(e){
                e.preventDefault();
                /* Upon submitting modal patron list add form... */
                if ( $('#new_patron_list').val() ) {
                    $(".patron-list-add").each(function() {
                        /* Check each list name in the menu of patron lists */
                        /* If submitted list name matches... */
                        if ( $(this).text() == $('#new_patron_list').val() ) {
                            alert( _("You already have a list with that name!") );
                            return false;
                        }
                    });
                } else {
                    alert( _("You must give your new patron list a name!") );
                    return false;
                }
                $("#new-patron-list").modal("hide");
                patronListAdd();
            });

            $("#select_all").on("click",function(e){
                e.preventDefault();
                $(".selection").each(function(){
                    if( $(this).prop("checked") == false ){
                        $(this).prop( "checked", true ).change();
                    }
                });
            });
            $("#clear_all").on("click",function(e){
                e.preventDefault();
                $(".selection").each(function(){
                    if( $(this).prop("checked") ){
                        $(this).prop("checked", false ).change();
                    }
                });
            });

            [% IF searchmember %]
                $("#searchmember_filter").val("[% searchmember | html %]");
            [% END %]
            [% IF searchfieldstype %]
                $("searchfieldstype_filter").val("[% searchfieldstype | html %]");
            [% END %]
            [% IF searchtype %]
                $("#searchtype_filter option[value='[% searchtype | html %]']").prop("selected", true);
            [% END %]
            [% IF categorycode_filter %]
                $("#categorycode_filter").val("[% categorycode_filter | html %]");
            [% END %]
            [% IF branchcode_filter %]
                $("#branchcode_filter").val("[% branchcode_filter | html %]");
            [% END %]

            $("#searchheader").hide();
            $("#patron_search_form").on('submit', function(){$("#searchheader").show();});
            $("#clear_search").on("click",function(e){$("#searchheader").hide();});

            [% IF (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
            $("#send_notice_letter_select").on('click', function(e){
                var patronCount = $("#memberresultst input:checkbox:checked").length;
                if ( patronCount == 0 ) {
                    alert( _("You do not have selected any patrons to send a notice!") );
                    return false;
                }
                if ( patronCount > 100 ) {
                    alert( _("Sending an adhoc notice is limited to a maximum of 100 patrons!") );
                    return false;
                }

                $('#selectAdhocNoticeLetterPatronCount').text(patronCount);
                
                $.ajax({
                    data: {},
                    type: 'POST',
                    url: '/cgi-bin/koha/svc/members/adhocletters',
                    success: function(data) {           
                        var letterSelect =  $("#adhocNoticeLetterSelection_letter");
                        letterSelect.find('option').remove();
                        for (var i=0; i < data.letters.length; i++ ) {
                           letterSelect.append($('<option></option>').val(data.letters[i].code).html(data.letters[i].name));
                        }
                        $("#selectAdhocNoticeLetter").modal("show");
                    },
                    error: function() {
                        alert( _("An error occured while retrieving available letters for adhoc-notices.") );
                    }
                });

                return true;
            });
            $("#send_notice_submit").on('click', function(e){
                e.preventDefault();
                var patronCount = $("#memberresultst input:checkbox:checked").length;
                if ( patronCount == 0 ) {
                    alert( _("You have not selected any patrons to send a notice!") );
                    return false;
                }
                if ( patronCount > 100 ) {
                    alert( _("Sending an adhoc notice is limited to a maximum of 100 patrons!") );
                    return false;
                }

                var borrowernumbers = [];
                $("#memberresultst").find("input:checkbox:checked").each(function(){
                    borrowernumbers.push($(this).val());
                });
                
                var data = {
                    use_letter: $("#adhocNoticeLetterSelection_letter").val(),
                    use_email: ($('#preferEmail').is(":checked") ? $("#preferEmail").val() : ''),
                    no_notice_fees: ($('#dontCharge').is(":checked") ? $("#dontCharge").val() : ''),
                    no_email_bcc: ($('#noBccEmail').is(":checked") ? '' : $("#noBccEmail").val() ),
                    borrowernumbers: borrowernumbers
                };

                $.ajax({
                    data: data,
                    type: 'POST',
                    url: '/cgi-bin/koha/svc/members/sendnotice',
                    success: function(data) {
                        var patronExportModal = $("#selectAdhocNoticeLetter");
                        $("#notice_sent_dialog").show();
                        $("#notice_sent_dialog").find(".patrons-length").text(patronCount);
                        $("#notice_sent_dialog").find(".letter-name").text($("#adhocNoticeLetterSelection_letter").find("option:selected").text());
                        if ( data.letter_mailed > 0 ) {
                            $("#notice_sent_dialog").find(".letter-email-count").text(data.letter_mailed);
                            $("#notice_sent_dialog").find(".letter-email").show();
                        }
                        else {
                            $("#notice_sent_dialog").find(".letter-email").hide();
                        }
                        if ( data.letter_printed > 0 ) {
                            $("#notice_sent_dialog").find(".letter-print-count").text(data.letter_printed);
                            $("#notice_sent_dialog").find("a").attr("href","/cgi-bin/koha/tools/download-files.pl?filename=" + data.printedfile + "&op=download");
                            $("#notice_sent_dialog").find(".letter-print").show();
                        }
                        else {
                            $("#notice_sent_dialog").find(".letter-print").hide();
                        }
                        
                        //console.log(data);
                        patronExportModal.modal("hide");
                        $("#memberresultst").DataTable().ajax.reload();
                    },
                    error: function() {
                        alert( _("A server error occured processing the adhoc notice request.") );
                    }
                });

                return true;
            });
            [% END %]
        });

        function patronListAdd(){
            var borrowernumbers = JSON.parse( localStorage.getItem("patron_search_selections") ) || [];
            if ( borrowernumbers.length > 0 ){
                var data = {
                    add_to_patron_list: $("#add_to_patron_list").val(),
                    new_patron_list: $("#new_patron_list").val(),
                    borrowernumbers: borrowernumbers
                };
                $.ajax({
                    data: data,
                    type: 'POST',
                    url: '/cgi-bin/koha/svc/members/add_to_list',
                    success: function(data) {
                        $("#patron_list_dialog").show();
                        $("#patron_list_dialog > span.patrons-length").html(data.patrons_added_to_list);
                        $("#patron_list_dialog > a").attr("href", "/cgi-bin/koha/patron_lists/list.pl?patron_list_id=" + data.patron_list.patron_list_id);
                        $("#patron_list_dialog > a").html(data.patron_list.name);

                        if ( $('#add_to_patron_list').val() == 'new' ) {
                            /* Add a new entry to the menu */
                            $("#patronlist-dropdown .divider").before('<li><a class="patron-list-add" href="#" data-listid="' + data.patron_list.patron_list_id + '">' + data.patron_list.name + '</li>');
                        }
                    },
                    error: function() {
                        alert( _("An error occurred. Patron list could not be updated.") );
                    }
                });
                return true;
            } else {
                alert( _("You have not selected any patrons to add to a list!") );
                return false;
            }
        }

        function prepSelections(){
            var selected_patrons = JSON.parse( localStorage.getItem("patron_search_selections") );
            if( selected_patrons && selected_patrons.length > 0 ){
                showPatronSelections( selected_patrons.length );

                $('#merge-patrons').prop('disabled', true);
                $('#send_notice_letter_select').removeClass("disabled").prop("disabled", false);
                $("input.selection").each(function(){
                    var cardnumber = $(this).val();
                    if( selected_patrons.indexOf( cardnumber ) >= 0 ){
                        $(this).prop("checked", true );
                    }
                });

                if( selected_patrons.length > 1 ){
                    $('#merge-patrons').removeClass("disabled").prop('disabled', false);
                    $('#patronlist-menu').removeClass("disabled").prop('disabled', false);
                }
            }
        }

        $('#memberresultst tbody').on('click','td',function(e){
            var $checkbox = $(this).find("input[type=checkbox]");
            if (e.target.type != "checkbox") {
                $checkbox.prop('checked', !$checkbox.prop("checked"));
                $checkbox.change();
            }
        });

    </script>

    <script>
        // Apply DataTables on the results table
        var table_settings = [% TablesSettings.GetTableSettings( 'members', 'member', 'memberresultst', 'json' ) | $raw %];
        [% UNLESS CAN_user_borrowers_edit_borrowers OR CAN_user_tools_manage_patron_lists %]
            [%# Remove the first column if we do not display the checkbox %]
            table_settings['columns'].splice(0, 1);
        [% END %]
    </script>

    [% IF circsearch == 1 %]
        [% SET redirect_url = '/cgi-bin/koha/circ/circulation.pl' %]
    [% ELSE %]
        [% SET redirect_url = '/cgi-bin/koha/members/moremember.pl' %]
    [% END %]
    [% PROCESS patron_search_js table_id => 'memberresultst', categories => categories, libraries => libraries, extended_attribute_types => attribute_type_codes, columns => columns,actions => ['edit', 'checkout'], redirect_if_one_result => 1, redirect_url => redirect_url, sticky_header => "searchheader", sticky_to => "searchresults", default_sort_column => 'name-address', display_search_description => 1, remember_selections => 1 %]

[% END %]

[% INCLUDE 'intranet-bottom.inc' %]
