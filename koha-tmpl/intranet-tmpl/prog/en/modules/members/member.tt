[% USE raw %]
[% USE Asset %]
[% USE Koha %]
[% USE TablesSettings %]
[% USE Branches %]
[% USE Letters %]
[% USE Categories %]
[% SET footerjs = 1 %]
[% PROCESS 'patronfields.inc' %]
[% INCLUDE 'doc-head-open.inc' %]
<title>Patrons[% IF ( searching ) %] &rsaquo; Search results[% END %] &rsaquo; Koha</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>

<body id="pat_member" class="pat">
[% INCLUDE 'header.inc' %]
[% INCLUDE 'patron-search.inc' %]

<nav id="breadcrumbs" aria-label="Breadcrumb" class="breadcrumb">
    <ol>
        <li>
            <a href="/cgi-bin/koha/mainpage.pl">Home</a>
        </li>
        [% IF ( searching ) %]
            <li>
                <a href="/cgi-bin/koha/members/members-home.pl">Patrons</a>
            </li>
            <li>
                <a href="#" aria-current="page">
                    Search results
                </a>
            </li>
        [% ELSE %]
            <li>
                <a href="#" aria-current="page">
                    Patrons
                </a>
            </li>
        [% END %]
    </ol>
</nav>

<div class="main container-fluid">
    <div class="row">
        <div class="col-sm-10 col-sm-push-2">
            <main>

          [% IF CAN_user_tools_manage_patron_lists %]
            <div id="patron_list_dialog" class="dialog alert">
              Added <span class="patrons-length"></span> patrons to <a></a>.
            </div>
          [% END %]
          [% IF (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
            <div id="notice_sent_dialog" class="dialog alert">
              Letter "<span class="letter-name"></span>" successfully created as notice to <span class="patrons-length"></span> patron(s).
              <span class="letter-email"><br /><span class="letter-email-count"></span> patron(s) notified by email.</span>
              <span class="letter-print"><br />Print notices created for <span class="letter-print-count"></span> patron(s). <a href="/cgi-bin/koha/tools/download-files.pl" target="_blank">Click here to download the notices for printing.</a></span>
            </div>
          [% END %]

          [% INCLUDE 'patron-toolbar.inc' %]
          [% INCLUDE 'noadd-warnings.inc' %]

          <div class="browse">
            Browse by last name:
            [% FOREACH letter IN alphabet.split(' ') %]
                <a href="#" class="filterByLetter">[% letter | html %]</a>
            [% END %]
          </div>

          [% IF CAN_user_borrowers_edit_borrowers && pending_borrower_modifications %]
            <div class="pending-info" id="patron_updates_pending">
              <a href="/cgi-bin/koha/members/members-update.pl">Patrons requesting modifications</a>:
              <span class="number_box"><a href="/cgi-bin/koha/members/members-update.pl">[% pending_borrower_modifications | html %]</a></span>
            </div>
          [% END %]

          <div id="searchresults">
            <h3>Patrons found for: <span id="searchpattern">[% IF searchmember %] for '[% searchmember | html %]'[% END %]</span></h3>
            [% IF CAN_user_tools_manage_patron_lists || CAN_user_borrowers_edit_borrowers || (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
              <div class="searchheader fh-fixedHeader" id="searchheader">
                  <div>
                      <a href="#" id="select_all"><i class="fa fa-check"></i> Select all</a>
                      |
                      <a href="#" id="clear_all"><i class="fa fa-remove"></i> Clear all</a>
                    [% IF CAN_user_tools_manage_patron_lists %]
                      |
                      <span>
                          <label for="add_to_patron_list">Add selected patrons to:</label>
                          <select id="add_to_patron_list" name="add_to_patron_list">
                              <option value=""></option>
                              [% IF patron_lists %]
                                  <optgroup label="Patron lists:">
                                      [% FOREACH pl IN patron_lists %]
                                          <option value="[% pl.patron_list_id | html %]">[% pl.name | html %]</option>
                                      [% END %]
                                  </optgroup>
                              [% END %]

                              <option value="new">[ New list ]</option>
                          </select>

                          <input type="text" id="new_patron_list" name="new_patron_list" id="new_patron_list" />

                          <input id="add_to_patron_list_submit" type="submit" class="submit" value="Save">
                      </span>
                    [% END %]
                    [% IF (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
                         &#160;&#160;|&#160;&#160;
                         <input id="send_notice_letter_select" type="submit" class="submit" value="Send notice">
                    [% END %]

                    [% IF CAN_user_tools_manage_patron_lists && CAN_user_borrowers_edit_borrowers %]
                        |
                    [% END %]

                    [% IF CAN_user_borrowers_edit_borrowers %]
                          <button id="merge-patrons" type="submit">Merge selected patrons</button>
                    [% END %]
                  </div>
                </div>
            [% END %]

            <table id="memberresultst">
              <thead>
                <tr>
                [% IF CAN_user_borrowers_edit_borrowers || CAN_user_tools_manage_patron_lists %]
                  <th class="noExport">&nbsp;</th>
                [% END %]
                  <th>Card</th>
                  <th>Name</th>
                  <th>Date of birth</th>
                  <th>Category</th>
                  <th>Library</th>
                  <th>Restrictions</th>
                  <th>Expires on</th>
                  <th>OD/Checkouts</th>
                  <th>Fines</th>
                  <th>Circ note</th>
                  <th class="noExport">&nbsp;</th>
                </tr>
              </thead>
              <tbody></tbody>
            </table>
          </div>

            </main>
        </div> <!-- /.col-sm-10.col-sm-push-2 -->

        <div class="col-sm-2 col-sm-pull-10">
            <aside>
                <form method="get" id="searchform">
                  <input type="hidden" id="firstletter_filter" value="" />
                  <fieldset class="brief">
                    <h3>Search patrons</h3>
                    <ol>
                      <li>
                        <label for="searchmember_filter">Search for:</label>
                        <input type="text" id="searchmember_filter" value="[% searchmember | html %]"/>
                      </li>
                      <li>
                        <label for="searchfieldstype_filter">Search field:</label>
                        <select name="searchfieldstype" id="searchfieldstype_filter">
                            [% pref_fields = Koha.Preference('DefaultPatronSearchFields').split(',') %]
                            [% default_fields = [ 'standard', 'surname', 'cardnumber', 'email', 'borrowernumber', 'userid', 'phone', 'address', 'city', 'dateofbirth', 'sort1', 'sort2' ] %]
                            [% search_options = default_fields.merge(pref_fields).unique %]
                            [% FOREACH s_o IN search_options %]
                                [% display_name = PROCESS patron_fields name=s_o %]
                                [% NEXT IF !display_name %]
                                [% IF searchfieldstype == s_o %]
                                    <option selected="selected" value=[% s_o | html %]>[% display_name | $raw %]</option>
                                [% ELSE %]
                                    <option value=[% s_o | html %]>[% display_name | $raw %]</option>
                                [% END %]
                            [% END %]
                        </select>
                      </li>
                      <li>
                        <label for="searchtype_filter">Search type:</label>
                        <select name="searchtype" id="searchtype_filter">
                          [% IF searchtype == "start_with" %]
                            <option value='start_with' selected="selected">Starts with</option>
                            <option value="contain">Contains</option>
                          [% ELSE %]
                            <option value='start_with'>Starts with</option>
                            <option value="contain" selected="selected">Contains</option>
                          [% END %]
                        </select>
                      </li>
                      <li>
                        <label for="categorycode_filter">Patron category:</label>
                        [% SET categories = Categories.all() %]
                        <select id="categorycode_filter">
                          <option value="">Any</option>
                          [% FOREACH cat IN categories %]
                            [% IF cat.categorycode == categorycode_filter %]
                    <option selected="selected" value="[% cat.categorycode | html %]">[% cat.description | html %]</option>
                            [% ELSE %]
                    <option value="[% cat.categorycode | html %]">[% cat.description | html %]</option>

                            [% END %]
                          [% END %]
                        </select>
                      </li>
                      <li>
                        <label for="branchcode_filter">Library:</label>
                        [% SET branches = Branches.all( selected => branchcode_filter, only_from_group => 1 ) %]
                        <select id="branchcode_filter">
                          [% IF branches.size != 1 %]
                            <option value="">Any</option>
                          [% END %]
                          [% PROCESS options_for_libraries libraries => branches %]
                        </select>
                      </li>
                      <li>
                        <span>&#160;
                      <li>
                      <li>
                        <label for="agerangestart_filter">Patron age: </label>
                          from&#160;
                          <input type="number" name="agerangestart_filter" id="agerangestart_filter" value="[% agerangestart %]" step="any" min="0" class="agerange-input" />
                          to&#160;
                          <input type="number" name="agerangeend_filter" id="agerangeend_filter" value="[% agerangeend %]" step="any" min="0" class="agerange-input" />
                      </li>
                      <li>
                        <label for="issuecountstart_filter">Number of loans: </label>
                          from&#160;
                          <input type="number" name="issuecountstart_filter" id="issuecountstart_filter" value="[% issuecountstart %]" step="any" min="0" class="issuecount-input" />
                          to&#160;
                          <input type="number" name="issuecountend_filter" id="issuecountend_filter" value="[% issuecountend %]" step="any" min="0" class="issuecount-input" />
                      </li>
                      <li>
                        <label for="chargesfrom_filter">Open charges amount:</label>
                          from&#160;
                          <input type="number" name="chargesfrom_filter" id="chargesfrom_filter" value="[% chargesfrom %]" step="any" min="0" class="charges-input" />
                          to&#160; 
                          <input type="number" name="chargesto_filter" id="chargesto_filter" value="[% chargesto %]" step="any" min="0" class="charges-input" />
                      </li>
                      <li>
                        <label for="chargessince_filter">Open charges since:</label>
                        <input type="text" size="10" id="chargessince_filter" name="chargessince_filter" value="[% chargessince %]" class="datepicker" />
                      </li>
                      <li>
                        <label for="accountexpiresfrom_filter">Account expires/expired: </label>
                        from&#160;<input type="text" size="10" id="accountexpiresfrom_filter" name="accountexpiresfrom_filter" value="[% accountexpiresfrom %]" class="datepicker" /><br />
                        to&#160;<input type="text" size="10" id="accountexpiresto_filter" name="accountexpiresto_filter" value="[% accountexpiresto %]" class="datepicker" />
                      </li>
                      <li>
                        <label for="debarreduntilfrom_filter">Debarred until: </label>
                        from&#160;<input type="text" size="10" id="debarreduntilfrom_filter" name="debarreduntilfrom_filter" value="[% debarreduntilfrom %]" class="datepicker" /><br />
                        to&#160;<input type="text" size="10" id="debarreduntilto_filter" name="debarreduntilto_filter" value="[% debarreduntilto %]" class="datepicker" />
                      </li>
                      <li>
                        <label for="inactivesince_filter">Inactive since:</label>
                        <input type="text" size="10" id="inactivesince_filter" name="inactivesince_filter" value="[% inactivesince %]" class="datepicker" />
                      </li>
                      <li>
                        <label for="lastlettercode_filter">Last letter: </label>
                        [% SET letters = Letters.all( selected => lastlettercode) %]
                        <select id="lastlettercode_filter">
                          [% IF letters.size != 1 %]
                            <option value="">Any</option>
                          [% END %]
                          [% FOREACH b IN letters %]
                            [% IF b.selected %]
                              <option selected="selected" value="[% b.code %]">[% b.name %]</option>
                            [% ELSE %]
                              <option value="[% b.code %]">[% b.name %]</option>
                            [% END %]
                          [% END %]
                        </select>
                      </li>
                      <li>
                        <label for="overduelevel_filter">Checkouts overdue level: </label>
                        <select id="overduelevel_filter">
                          <option value="">Not selected</option>
                          [% levels = ['1','2','3','4','5'] %]
                          [% FOREACH b IN levels %]
                            [% IF b == overduelevel %]
                              <option selected="selected" value="[% b %]">Level [% b %]</option>
                            [% ELSE %]
                              <option value="[% b %]">Level [% b %]</option>
                            [% END %]
                          [% END %]
                        </select>
                      </li>
                      <li>
                        <label for="validemailavailable_filter">Email Address: </label>
                        <select id="validemailavailable_filter">
                            <option value="">Not selected</option>
                            [% IF ( validemailavailable == 'yes' ) %]
                                <option value="yes" selected="selected">Email available</option>
                            [% ELSE %]
                                <option value="yes">Email available</option>
                            [% END %]
                            [% IF ( validemailavailable == 'no' ) %]
                                <option value="no" selected="selected">Email not available</option>
                            [% ELSE %]
                                <option value="no">Email not available</option>
                            [% END %]
                       </select>
                      </li>
                      <li>
                        <label for="patronlistid_filter">Patron list: </label>
                        <select id="patronlistid_filter">
                            <option value="">Not selected</option>
                            [% FOREACH p IN patron_lists %]
                              [% IF p.patron_list_id == patronlistid %]
                                <option selected="selected" value="[% p.patron_list_id %]">[% p.name %]</option>
                              [% ELSE %]
                                <option value="[% p.patron_list_id %]">[% p.name %]</option>
                              [% END %]
                            [% END %]
                        </select>
                      </li>
                    </ol>
                    <fieldset class="action">
                      <input type="submit" value="Search" />
                      <input type="button" value="Clear" id="clear_search" />
                    </fieldset>
                  </fieldset>
                </form>
            </aside>
        </div> <!-- /.col-sm-2.col-sm-pull-10 -->
    </div> <!-- /.row -->

<!-- Modal to send adhoc notices -->
<div class="modal fade" id="selectAdhocNoticeLetter" tabindex="-1" role="dialog" aria-labelledby="selectAdhocNoticeLetter_label" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="noticeform">
            <div class="modal-header">
                <button type="button" class="closebtn" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 id="selectAdhocNoticeLetter_label">Send Notice</h3>
            </div>
            <div class="modal-body">
            
                <p>
                    Please select the letter that will be used to create notices to the selected patrons. Please be aware that patrons might be charged for notices depending on the defined notice fee rules.
                </p>
                <p>
                    Number of selected patrons: <span id="selectAdhocNoticeLetterPatronCount"></span>
                </p>
                <p id="adhocNoticeLetterSelection">
                    <label for="adhocNoticeLetterSelection_letter">Select letter: </label>
                    <select name="adhocNoticeLetterSelection_letter" id="adhocNoticeLetterSelection_letter">
                    </select>
                </p>
                <p>
                    <label>
                        Prefer Email notification if an email address is available: <input type="checkbox" id="preferEmail" name="preferEmail" value="yes" checked>
                    </label>
                </p>
                <p>
                    <label>
                        Do not charge patrons despite of possible configured notice fee rules: <input type="checkbox" id="dontCharge" name="dontCharge" value="yes">
                    </label>
                </p>
                <p style="display:[% IF ( Koha.Preference('NoticeBcc') ) %]unset[% ELSE %]none[% END %]">
                    <label>
                        Send copies of the message(s) to the configured email address of the library: <input type="checkbox" id="noBccEmail" name="noBccEmail" value="yes">
                    </label>
                </p>
            </div>
            <div class="modal-footer">
                <input id="send_notice_submit" type="submit" class="submit" value="Create notices">
            </div>
            </form>
        </div>
    </div>
</div>
[% MACRO jsinclude BLOCK %]
    [% INCLUDE 'calendar.inc' %]
    [% INCLUDE 'datatables.inc' %]
    [% INCLUDE 'columns_settings.inc' %]
    [% INCLUDE 'str/members-menu.inc' %]
    [% Asset.js("lib/hc-sticky.js") | $raw %]
    [% Asset.js("js/members-menu.js") | $raw %]
    <script>
        $(document).ready(function() {
            $('#merge-patrons').prop('disabled', true);
            $('#memberresultst').on('change', 'input.selection', function() {
                if ( $('.selection:checked').length > 1 ) {
                    $('#merge-patrons').prop('disabled', false);
                } else {
                    $('#merge-patrons').prop('disabled', true);
                }
            });
            $('#merge-patrons').on('click', function() {
                var merge_patrons_url = 'merge-patrons.pl?' + $('.selection:checked')
                    .map(function() {
                       return "id=" + $(this).val()
                    }).get().join('&');

                window.location.href = merge_patrons_url;
            });

            $('#add_to_patron_list_submit').prop('disabled', true);
            $('#new_patron_list').hide();
            $("#notice_sent_dialog").hide();
            
            $('#add_to_patron_list').change(function() {
                var value = $('#add_to_patron_list').val();
                if ( value == 'new' ) {
                    $('#new_patron_list').val('')
                    $('#new_patron_list').show();
                    $('#new_patron_list').focus();
                } else if ( value ) {
                    $('#new_patron_list').hide();
                    $('#add_to_patron_list_submit').prop('disabled', false);
                } else {
                    $('#new_patron_list').hide();
                    $('#add_to_patron_list_submit').prop('disabled', true);
                }
            });

            $('#new_patron_list').on('input', function() {
                if ( $('#new_patron_list').val() ) {
                    $('#add_to_patron_list_submit').prop('disabled', false);
                } else {
                    $('#add_to_patron_list_submit').prop('disabled', true);
                }
            });

            $("#add_to_patron_list_submit").on('click', function(e){
                if ( $('#add_to_patron_list').val() == 'new' ) {
                    if ( $('#new_patron_list').val() ) {
                        $("#add_to_patron_list option").each(function() {
                            if ( $(this).text() == $('#new_patron_list').val() ) {
                                alert( _("You already have a list with that name!") );
                                return false;
                            }
                        });
                    } else {
                        alert( _("You must give your new patron list a name!") );
                        return false;
                    }
                }

                if ( $("#memberresultst input:checkbox:checked").length == 0 ) {
                    alert( _("You have not selected any patrons to add to a list!") );
                    return false;
                }

                var borrowernumbers = [];
                $("#memberresultst").find("input:checkbox:checked").each(function(){
                    borrowernumbers.push($(this).val());
                });
                var data = {
                    add_to_patron_list: $("#add_to_patron_list").val(),
                    new_patron_list: $("#new_patron_list").val(),
                    borrowernumbers: borrowernumbers
                };
                $.ajax({
                    data: data,
                    type: 'POST',
                    url: '/cgi-bin/koha/svc/members/add_to_list',
                    success: function(data) {
                        $("#patron_list_dialog").show();
                        $("#patron_list_dialog > span.patrons-length").html(data.patrons_added_to_list);
                        $("#patron_list_dialog > a").attr("href", "/cgi-bin/koha/patron_lists/list.pl?patron_list_id=" + data.patron_list.patron_list_id);
                        $("#patron_list_dialog > a").html(data.patron_list.name);
                        if ( $('#add_to_patron_list').val() == 'new' ) {
                            var new_patron_list_added = $("<option>", {
                                value: data.patron_list.patron_list_id,
                                text: data.patron_list.name
                            });
                            $("#add_to_patron_list optgroup").append(new_patron_list_added);
                            $("#add_to_patron_list").val(data.patron_list.patron_list_id);
                            $("#new_patron_list").val('');
                            $('#add_to_patron_list').change();
                        }
                    },
                    error: function() {
                        alert("an error occurred");
                    }
                });
                return true;
            });
            [% IF (CAN_user_circulate_send_adhoc_notices && Koha.Preference('AdhocNoticesLetterCodes') ) %]
            $("#send_notice_letter_select").on('click', function(e){
                var patronCount = $("#memberresultst input:checkbox:checked").length;
                if ( patronCount == 0 ) {
                    alert( _("You do not have selected any patrons to send a notice!") );
                    return false;
                }
                if ( patronCount > 100 ) {
                    alert( _("Sending an adhoc notice is limited to a maximum of 100 patrons!") );
                    return false;
                }

                $('#selectAdhocNoticeLetterPatronCount').text(patronCount);
                
                $.ajax({
                    data: {},
                    type: 'POST',
                    url: '/cgi-bin/koha/svc/members/adhocletters',
                    success: function(data) {           
                        var letterSelect =  $("#adhocNoticeLetterSelection_letter");
                        letterSelect.find('option').remove();
                        for (var i=0; i < data.letters.length; i++ ) {
                           letterSelect.append($('<option></option>').val(data.letters[i].code).html(data.letters[i].name));
                        }
                        $("#selectAdhocNoticeLetter").modal("show");
                    },
                    error: function() {
                        alert( _("An error occured while retrieving available letters for adhoc-notices.") );
                    }
                });

                return true;
            });
            $("#send_notice_submit").on('click', function(e){
                e.preventDefault();
                var patronCount = $("#memberresultst input:checkbox:checked").length;
                if ( patronCount == 0 ) {
                    alert( _("You have not selected any patrons to send a notice!") );
                    return false;
                }
                if ( patronCount > 100 ) {
                    alert( _("Sending an adhoc notice is limited to a maximum of 100 patrons!") );
                    return false;
                }

                var borrowernumbers = [];
                $("#memberresultst").find("input:checkbox:checked").each(function(){
                    borrowernumbers.push($(this).val());
                });
                
                var data = {
                    use_letter: $("#adhocNoticeLetterSelection_letter").val(),
                    use_email: ($('#preferEmail').is(":checked") ? $("#preferEmail").val() : ''),
                    no_notice_fees: ($('#dontCharge').is(":checked") ? $("#dontCharge").val() : ''),
                    no_email_bcc: ($('#noBccEmail').is(":checked") ? '' : $("#noBccEmail").val() ),
                    borrowernumbers: borrowernumbers
                };

                $.ajax({
                    data: data,
                    type: 'POST',
                    url: '/cgi-bin/koha/svc/members/sendnotice',
                    success: function(data) {
                        var patronExportModal = $("#selectAdhocNoticeLetter");
                        $("#notice_sent_dialog").show();
                        $("#notice_sent_dialog").find(".patrons-length").text(patronCount);
                        $("#notice_sent_dialog").find(".letter-name").text($("#adhocNoticeLetterSelection_letter").find("option:selected").text());
                        if ( data.letter_mailed > 0 ) {
                            $("#notice_sent_dialog").find(".letter-email-count").text(data.letter_mailed);
                            $("#notice_sent_dialog").find(".letter-email").show();
                        }
                        else {
                            $("#notice_sent_dialog").find(".letter-email").hide();
                        }
                        if ( data.letter_printed > 0 ) {
                            $("#notice_sent_dialog").find(".letter-print-count").text(data.letter_printed);
                            $("#notice_sent_dialog").find("a").attr("href","/cgi-bin/koha/tools/download-files.pl?filename=" + data.printedfile + "&op=download");
                            $("#notice_sent_dialog").find(".letter-print").show();
                        }
                        else {
                            $("#notice_sent_dialog").find(".letter-print").hide();
                        }
                        
                        //console.log(data);
                        patronExportModal.modal("hide");
                        $("#memberresultst").DataTable().ajax.reload();
                    },
                    error: function() {
                        alert( _("A server error occured processing the adhoc notice request.") );
                    }
                });

                return true;
            });
            [% END %]
            $(".filterByLetter").on("click",function(e){
                e.preventDefault();
                filterByFirstLetterSurname($(this).text());
            });
            $("#select_all").on("click",function(e){
                e.preventDefault();
                $(".selection").prop("checked", true).change();
            });
            $("#clear_all").on("click",function(e){
                e.preventDefault();
                $(".selection").prop("checked", false).change();
            });
            $("#clear_search").on("click",function(e){
                e.preventDefault();
                clearFilters(true);
            });
            $("#searchform").on("submit", filter);

        });

        var dtMemberResults;
        var search = 1;
        $(document).ready(function() {
            [% IF searchmember %]
                $("#searchmember_filter").val("[% searchmember | html %]");
            [% END %]
            [% IF searchfieldstype %]
                $("searchfieldstype_filter").val("[% searchfieldstype | html %]");
            [% END %]
            [% IF searchtype %]
                $("#searchtype_filter").val("[% searchtype | html %]");
            [% END %]
            [% IF categorycode %]
                $("#categorycode_filter").val("[% categorycode_filter | html %]");
            [% END %]
            [% IF branchcode %]
                $("#branchcode_filter").val("[% branchcode_filter | html %]");
            [% END %]
            [% IF lastlettercode %]
                $("#lastlettercode_filter").val("[% lastlettercode %]");
            [% END %]

            [% IF view != "show_results" %]
                search = 0;
            [% ELSE %]
                $("#searchresults").show();
            [% END %]

            // Build the aLengthMenu
            var aLengthMenu = [
                [% PatronsPerPage | html %], 10, 20, 50, 100, -1
            ];
            jQuery.unique(aLengthMenu);
            aLengthMenu.sort(function( a, b ){
                // Put "All" at the end
                if ( a == -1 ) {
                    return 1;
                } else if ( b == -1 ) {
                    return -1;
                }
                return parseInt(a) < parseInt(b) ? -1 : 1;}
            );
            var aLengthMenuLabel = [];
            $(aLengthMenu).each(function(){
                if ( this == -1 ) {
                    // Label for -1 is "All"
                    aLengthMenuLabel.push(_("All"));
                } else {
                    aLengthMenuLabel.push(this);
                }
            });

            // Apply DataTables on the results table
            var columns_settings = [% TablesSettings.GetColumns( 'members', 'member', 'memberresultst', 'json' ) | $raw %];
            [% UNLESS CAN_user_borrowers_edit_borrowers OR CAN_user_tools_manage_patron_lists %]
                [%# Remove the first column if we do not display the checkbox %]
                columns_settings.splice(0, 1);
            [% END %]
            dtMemberResults = KohaTable("memberresultst", {
                'bServerSide': true,
                'sAjaxSource': "/cgi-bin/koha/svc/members/search",
                'fnServerData': function(sSource, aoData, fnCallback) {
                    if ( ! search ) {
                        return;
                    }
                    aoData.push({
                        'name': 'searchmember',
                        'value': $("#searchmember_filter").val()
                    },{
                        'name': 'firstletter',
                        'value': $("#firstletter_filter").val()
                    },{
                        'name': 'searchfieldstype',
                        'value': $("#searchfieldstype_filter").val()
                    },{
                        'name': 'searchtype',
                        'value': $("#searchtype_filter").val()
                    },{
                        'name': 'categorycode',
                        'value': $("#categorycode_filter").val()
                    },{
                        'name': 'branchcode',
                        'value': $("#branchcode_filter").val()
                    },{
                        'name': 'chargesfrom',
                        'value': $("#chargesfrom_filter").val()
                    },{
                        'name': 'chargesto',
                        'value': $("#chargesto_filter").val()
                    },{
                        'name': 'agerangestart',
                        'value': $("#agerangestart_filter").val()
                    },{
                        'name': 'agerangeend',
                        'value': $("#agerangeend_filter").val()
                    },{
                        'name': 'chargessince',
                        'value': $("#chargessince_filter").val()
                    },{
                        'name': 'accountexpiresto',
                        'value': $("#accountexpiresto_filter").val()
                    },{
                        'name': 'accountexpiresfrom',
                        'value': $("#accountexpiresfrom_filter").val()
                    },{
                        'name': 'debarreduntilto',
                        'value': $("#debarreduntilto_filter").val()
                    },{
                        'name': 'debarreduntilfrom',
                        'value': $("#debarreduntilfrom_filter").val()
                    },{
                        'name': 'lastlettercode',
                        'value': $("#lastlettercode_filter").val()
                    },{
                        'name': 'overduelevel',
                        'value': $("#overduelevel_filter").val()
                    },{
                        'name': 'inactivesince',
                        'value': $("#inactivesince_filter").val()
                    },{
                        'name': 'issuecountstart',
                        'value': $("#issuecountstart_filter").val()
                    },{
                        'name': 'issuecountend',
                        'value': $("#issuecountend_filter").val()
                    },{
                        'name': 'validemailavailable',
                        'value': $("#validemailavailable_filter").val()
                    },{
                        'name': 'patronlistid',
                        'value': $("#patronlistid_filter").val()
                    },{
                        'name': 'name_sorton',
                        'value': 'borrowers.surname borrowers.firstname'
                    },{
                        'name': 'cardnumber_sorton',
                        'value': 'borrowers.cardnumber',
                    },{
                        'name': 'dateofbirth_sorton',
                        'value': 'borrowers.dateofbirth',
                    },{
                        'name': 'dateexpiry_sorton',
                        'value': 'borrowers.dateexpiry',
                    },{
                        'name': 'category_sorton',
                        'value': 'categories.description',
                    },{
                        'name': 'branch_sorton',
                        'value': 'branches.branchname'
                    },{
                        'name': 'borrowernotes_sorton',
                        'value': 'borrowers.borrowernotes'
                    },{
                        'name': 'debarred_sorton',
                        'value': 'debarredcomment borrowers.lost borrowers.gonenoaddress',
                    },{
                        'name': 'template_path',
                        'value': 'members/tables/members_results.tt',
                    });
                    $.ajax({
                        'dataType': 'json',
                        'type': 'POST',
                        'url': sSource,
                        'data': aoData,
                        'success': function(json){
                            // redirect if there is only 1 result.
                            if ( json.aaData.length == 1 ) {
                                var borrowernumber = json.aaData[0].borrowernumber;
                                document.location.href="/cgi-bin/koha/members/moremember.pl?borrowernumber="+borrowernumber;
                                return false;
                            }
                            fnCallback(json);
                        }
                    });
                },
                'aoColumns':[
                    [% IF CAN_user_borrowers_edit_borrowers || CAN_user_tools_manage_patron_lists %]
                      { 'mDataProp': 'dt_borrowernumber', 'bSortable': false },
                    [% END %]
                    { 'mDataProp': 'dt_cardnumber' },
                    { 'mDataProp': 'dt_name' },
                    { 'mDataProp': 'dt_dateofbirth' },
                    { 'mDataProp': 'dt_category' },
                    { 'mDataProp': 'dt_branch' },
                    { 'mDataProp': 'dt_debarred' },
                    { 'mDataProp': 'dt_dateexpiry' },
                    { 'mDataProp': 'dt_od_checkouts', 'bSortable': false },
                    { 'mDataProp': 'dt_fines', 'bSortable': false },
                    { 'mDataProp': 'dt_borrowernotes' },
                    { 'mDataProp': 'dt_action', 'bSortable': false, 'sClass': 'actions' }
                ],
                'bFilter': false,
                'bAutoWidth': false,
                [% IF CAN_user_borrowers_edit_borrowers || CAN_user_tools_manage_patron_lists %]
                    'aaSorting': [[2, 'asc']],
                [% ELSE %]
                    'aaSorting': [[1, 'asc']],
                [% END %]
                "aLengthMenu": [aLengthMenu, aLengthMenuLabel],
                'sPaginationType': 'full_numbers',
                "iDisplayLength": [% PatronsPerPage | html %],
                "bProcessing": true,
                "initComplete": function(settings, json) {
                    Sticky = $("#searchheader");
                    Sticky.hcSticky({
                        stickTo: "#searchresults",
                        stickyClass: "floating"
                    });
                }
            }, columns_settings);
            update_searched();
        });

        // Update the string "Results found ..."
        function update_searched(){
            var searched = $("#searchfieldstype_filter").find("option:selected").text();
            if ( $("#searchmember_filter").val() ) {
                if ( $("#searchtype_filter").val() == 'start_with' ) {
                    searched += _(" starting with ");
                } else {
                    searched += _(" containing ");
                }
                searched += "'" + $("#searchmember_filter").val() + "'";
            }
            if ( $("#firstletter_filter").val() ) {
                searched += _(" begins with ") + "'" + $("#firstletter_filter").val() +"'";
            }
            if ( $("#categorycode_filter").val() ) {
                searched += _(" with category ") + "'" + $("#categorycode_filter").find("option:selected").text() + "'";
            }
            if ( $("#branchcode_filter").val() ) {
                searched += _(" in library ") + $("#branchcode_filter").find("option:selected").text();
            }
            $("#searchpattern").text(searched);
        }

        // Redraw the table
        function filter() {
            $("#firstletter_filter").val('');
            update_searched();
            search = 1;
            $("#searchresults").show();
            dtMemberResults.fnDraw();
            return false;
        }

        // User has clicked on the Clear button
        function clearFilters(redraw) {
            $("#searchform select").val('');
            $("#firstletter_filter").val('');
            $("#searchmember_filter").val('');
            if(redraw) {
                search = 1;
                $("#searchresults").show();
                dtMemberResults.fnDraw();
            }
            $("#searchform select").val('');
            $("#firstletter_filter").val('');
            $("#searchmember_filter").val('');
            if(redraw) {
                search = 1;
                $("#searchresults").show();
                dtMemberResults.fnDraw();
            }
            $("#chargesfrom_filter").val('');
            $("#chargesto_filter").val('');
            $("#agerangestart_filter").val('');
            $("#agerangeend_filter").val('');
            $("#chargessince_filter").val('');
            $("#accountexpiresto_filter").val('');
            $("#accountexpiresfrom_filter").val('');
            $("#debarreduntilto_filter").val('');
            $("#debarreduntilfrom_filter").val('');
            $("#lastlettercode_filter").val('');
            $("#overduelevel_filter").val('');
            $("#inactivesince_filter").val('');
            $("#issuecountstart_filter").val('');
            $("#issuecountend_filter").val('');
        }

        // User has clicked on a letter
        function filterByFirstLetterSurname(letter) {
            clearFilters(false);
            $("#firstletter_filter").val(letter);
            update_searched();
            search = 1;
            $("#searchresults").show();
            dtMemberResults.fnDraw();
        }
    </script>
[% END %]

[% INCLUDE 'intranet-bottom.inc' %]
